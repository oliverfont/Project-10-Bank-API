swagger: "2.0"
info:
  title: "Bank Argent API documentation"
  description: "Contains all available API endpoints in this codebase"
  version: "1.0.0"
  termsOfService: "http://swagger.io/terms/"
host: "localhost:3001"
basePath: "/api/v1"
schemes:
  - "http"
paths:
  /user/login:
    post:
      tags:
        - "User Module"
      summary: "Login"
      description: "API for Login"
      parameters:
        - in: "body"
          name: "body"
          description: "Login Payload"
          required: true
          schema:
            $ref: "#/definitions/Login"
      produces:
        - "application/json"
      responses:
        '200':
          description: "Login Successfully"
          schema:
            $ref: "#/definitions/LoginResponse"
        '400':
          description: "Invalid Fields"
        '500':
          description: "Internal Server Error"
  /user/signup:
    post:
      tags:
        - "User Module"
      summary: "Signup"
      description: "API for Signup"
      parameters:
        - in: "body"
          name: "body"
          description: "Signup Payload"
          required: true
          schema:
            $ref: "#/definitions/User"
      produces:
        - "application/json"
      responses:
        '200':
          description: "Signup Successfully"
          schema:
            $ref: "#/definitions/ApiResponse"
        '400':
          description: "Invalid Fields"
        '500':
          description: "Internal Server Error"
  /user/profile:
    post:
      security:
        - Bearer: []
      tags:
        - "User Module"
      summary: "User Profile API"
      description: "API for fetching a user profile"
      parameters:
        - in: "header"
          name: "Authorization"
          description: "Attach Bearer JWT token"
          required: true
          type: "string"
      produces:
        - "application/json"
      responses:
        '200':
          description: "User profile retrieved successfully"
          schema:
            $ref: "#/definitions/ApiResponse"
        '400':
          description: "Invalid Fields"
        '500':
          description: "Internal Server Error"
    put:
      security:
        - Bearer: []
      tags:
        - "User Module"
      summary: "User Profile API"
      description: "API for updating a user profile"
      parameters:
        - in: "header"
          name: "Authorization"
          description: "Attach Bearer JWT token"
          required: true
          type: "string"
        - in: "body"
          name: "body"
          description: "Update user profile attributes"
          required: true
          schema:
            $ref: "#/definitions/UserProfile"
      produces:
        - "application/json"
      responses:
        '200':
          description: "User profile updated successfully"
          schema:
            $ref: "#/definitions/ApiResponse"
        '400':
          description: "Invalid Fields"
        '500':
          description: "Internal Server Error"
  /{account}/transactions:
    get:
      tags:
        - "Transactions"
      summary: "Get all transactions for the current month"
      description: "Retrieve a list of all transactions for the current month."
      parameters:
        - name: "Authorization"
          in: "header"
          required: true
          type: "string"
          description: "Bearer JWT token"
        - name: "account"
          in: "path"
          required: true
          type: "string"
          description: "Account type (e.g., checking, savings, credit)"
      responses:
        200:
          description: "Transactions retrieved successfully"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Transaction"
        401:
          description: "Unauthorized"
        500:
          description: "Internal Server Error"
    post:
      tags:
        - "Transactions"
      summary: "Add a new transaction"
      description: "Create a new transaction."
      parameters:
        - name: "Authorization"
          in: "header"
          required: true
          type: "string"
          description: "Bearer JWT token"
        - name: "account"
          in: "path"
          required: true
          type: "string"
          description: "Account type (e.g., checking, savings, credit)"
        - name: "body"
          in: "body"
          required: true
          schema:
            $ref: "#/definitions/NewTransaction"
      responses:
        201:
          description: "Transaction created successfully"
          schema:
            $ref: "#/definitions/Transaction"
        401:
          description: "Unauthorized"
        400:
          description: "Invalid input"
        500:
          description: "Internal Server Error"
  /{account}/transactions/{id}:
    get:
      tags:
        - "Transactions"
      summary: "Get transaction details"
      description: "Retrieve details of a specific transaction."
      parameters:
        - name: "Authorization"
          in: "header"
          required: true
          type: "string"
          description: "Bearer JWT token"
        - name: "account"
          in: "path"
          required: true
          type: "string"
          description: "Account type (e.g., checking, savings, credit)"
        - name: "id"
          in: "path"
          required: true
          type: "string"
          description: "Transaction ID"
      responses:
        200:
          description: "Transaction details retrieved successfully"
          schema:
            $ref: "#/definitions/Transaction"
        401:
          description: "Unauthorized"
        404:
          description: "Transaction not found"
        500:
          description: "Internal Server Error"
    put:
      tags:
        - "Transactions"
      summary: "Update a transaction"
      description: "Update details of a specific transaction."
      parameters:
        - name: "Authorization"
          in: "header"
          required: true
          type: "string"
          description: "Bearer JWT token"
        - name: "account"
          in: "path"
          required: true
          type: "string"
          description: "Account type (e.g., checking, savings, credit)"
        - name: "id"
          in: "path"
          required: true
          type: "string"
          description: "Transaction ID"
        - name: "body"
          in: "body"
          required: true
          schema:
            $ref: "#/definitions/UpdateTransaction"
      responses:
        200:
          description: "Transaction updated successfully"
          schema:
            $ref: "#/definitions/Transaction"
        401:
          description: "Unauthorized"
        400:
          description: "Invalid input"
        404:
          description: "Transaction not found"
        500:
          description: "Internal Server Error"
    delete:
      tags:
        - "Transactions"
      summary: "Delete a transaction"
      description: "Delete a specific transaction."
      parameters:
        - name: "Authorization"
          in: "header"
          required: true
          type: "string"
          description: "Bearer JWT token"
        - name: "account"
          in: "path"
          required: true
          type: "string"
          description: "Account type (e.g., checking, savings, credit)"
        - name: "id"
          in: "path"
          required: true
          type: "string"
          description: "Transaction ID"
      responses:
        204:
          description: "Transaction deleted successfully"
        401:
          description: "Unauthorized"
        404:
          description: "Transaction not found"
        500:
          description: "Internal Server Error"
securityDefinitions:
  Bearer:
    type: "apiKey"
    name: "Authorization"
    in: "header"
definitions:
  User:
    properties:
      email:
        type: "string"
        description: "user email"
      password:
        type: "string"
        description: "user password"
      firstName:
        type: "string"
        description: "user first name"
      lastName:
        type: "string"
        description: "user last name"
  Login:
    properties:
      email:
        type: "string"
        description: "user email"
      password:
        type: "string"
        description: "user password"
  ApiResponse:
    type: "object"
    properties:
      status:
        type: "integer"
      message:
        type: "string"
      body:
        type: "object"
        properties:
          id:
            type: "string"
          email:
            type: "string"
  LoginResponse:
    type: "object"
    properties:
      token:
        type: "string"
  UserProfile:
    type: "object"
    properties:
      firstName:
        type: "string"
      lastName:
        type: "string"
  Transaction:
    type: "object"
    properties:
      id:
        type: "string"
      date:
        type: "string"
        format: "date"
      description:
        type: "string"
      amount:
        type: "number"
        format: "double"
      balance:
        type: "number"
        format: "double"
      category:
        type: "string"
      notes:
        type: "string"
  NewTransaction:
    type: "object"
    properties:
      date:
        type: "string"
        format: "date"
      description:
        type: "string"
      amount:
        type: "number"
        format: "double"
      category:
        type: "string"
      notes:
        type: "string"
  UpdateTransaction:
    type: "object"
    properties:
      category:
        type: "string"
      notes:
        type: "string"